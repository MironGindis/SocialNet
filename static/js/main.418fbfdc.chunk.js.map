{"version":3,"sources":["assets/images/91.svg","assets/images/trruejob.webp","assets/images/chill.webp","serviceWorker.js","api/api.js","redux/profile-reducer.js","redux/dialogs-reducer.js","redux/users-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Navbar/Navbar.js","components/Music/Music.js","components/News/News.js","components/Settings/Settings.js","components/Dialogs/DialogsItem/DialogsItem.js","components/Dialogs/Message/Message.js","components/common/FormsControls/FormsControls.js","utils/validators/validators.js","components/Dialogs/Dialogs.js","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.js","components/common/Paginator/Paginator.js","components/Users/Users.js","components/common/Preloader/Preloader.js","redux/users-selectors.js","components/Users/UsersContainer.js","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.js","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js","components/Header/Header.js","components/Header/HeaderContainer.js","components/Login/Login.js","App.js","index.js","assets/images/User-Icon.png"],"names":["module","exports","Boolean","window","location","hostname","match","instanse","axios","withCredentials","baseURL","headers","usersAPI","pageSize","currentPage","get","then","response","data","userID","post","delete","profileAPI","usersId","status","put","authAPI","email","password","rememberMe","initialState","postsData","id","message","likesCount","source","profile","setStatus","type","profileReducer","state","action","newPost","newPostText","messages","dialogs","name","dialogsReducer","newMessage","newMessageText","users","totalCount","isFetching","followingNiProgress","followSuccsess","unfollowSuccsess","setUsers","setCurrentPage","setTotalUsers","totalUsersCount","toggleIsFetching","toggleFolowingProgress","requestUsers","dispatch","a","items","usersReducer","map","u","followed","filter","login","isAuth","setAuthUserData","getAuthUserData","resultCode","authReducer","initialized","appReducer","reducers","combineReducers","profilePage","dialogsPage","usersPage","auth","form","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Navbar","className","to","Music","News","Settings","DialogsItem","props","path","Message","Textarea","input","meta","touched","error","Input","requaredField","value","maxLenghtCreator","maxLength","length","maxLength50","AddMessageFormRedux","reduxForm","onSubmit","handleSubmit","Field","component","placeholder","validate","Dialogs","dialogsElements","dialog","messagesElements","values","SendMessage","newMessageBody","mapStateToPropsForRedirect","withAuthRedirect","Component","RedirectComponent","this","React","connect","NewMessage","Paginator","useState","portionNumber","setPortionNumber","pagesCount","Math","ceil","pages","i","push","portionsCount","leftPortionBorder","rightPortionBorder","onClick","onPageChanged","p","Users","key","src","photos","small","userPhoto","disabled","some","unfollowThunk","followThunk","Preloader","preloader","getUsers","getPageSize","getTotalCount","getCurrentPage","getIsFetching","getFollowingNiProgress","UsersContainer","pageNumber","ChangePage","ProfileStatusWithHooks","editMode","setEditMode","useEffect","toggleEditMode","updateUserStatus","onDoubleClick","isOwner","onChange","e","currentTarget","autoFocus","onBlur","ProfileInfo","fullName","large","aboutMe","lookingForAJob","findjob","chill","lookingForAJobDescription","Post","maxLength10","AddPostFormRedux","MyPosts","postsElements","addPost","MyPostsContainer","Profile","ProfileContainer","params","autorizedUserId","history","getUserProfile","getUserStatus","withRouter","Header","alt","logout","HeaderContainer","ReduxLoginForm","errorMessage","stopSubmit","_error","formdata","App","initializeApp","render","DialogsContainer","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.418fbfdc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/91.3aedb725.svg\";","module.exports = __webpack_public_path__ + \"static/media/trruejob.98c22497.webp\";","module.exports = __webpack_public_path__ + \"static/media/chill.3a05d0ee.webp\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import * as axios from \"axios\";\r\n\r\nconst instanse = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '6bdc48f4-a9b1-4db5-9981-179668bf2ca7'\r\n    }\r\n})\r\nexport const usersAPI = {\r\n    getUsers(pageSize, currentPage) {\r\n        return instanse.get(`users?count=${pageSize}&page=${currentPage}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    follow(userID) {\r\n        return instanse.post(`follow/${userID}`)\r\n\r\n    },\r\n    unfollow(userID) {\r\n        return instanse.delete(`follow/${userID}`)\r\n    },\r\n}\r\nexport const profileAPI = {\r\n    getProfile(usersId) {\r\n        return instanse.get(`profile/${usersId}`)\r\n    },\r\n    getStatus(usersId) {\r\n        return instanse.get(`profile/status/${usersId}`)\r\n    },\r\n    updateStatus(status) {\r\n        return instanse.put(`profile/status`, { status: status})\r\n    },\r\n}\r\nexport const authAPI = {\r\n    authMe(){\r\n        return instanse.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe = false){\r\n        return instanse.post(`/auth/login`, {email, password, rememberMe})\r\n    },\r\n    logout(){\r\n        return instanse.delete(`/auth/login`)\r\n    }\r\n}","import {profileAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD_POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\n\r\nlet initialState = {\r\n    postsData: [\r\n        {\r\n            id: 1,\r\n            message: 'Hi, how are you?',\r\n            likesCount: 15,\r\n            source: 'https://avatars.mds.yandex.net/get-zen_doc/1328583/pub_5c51c6e9420c4000ad739cf2_5c52fcca3c26f500aef4416b/scale_1200'\r\n        },\r\n        {\r\n            id: 2,\r\n            message: 'Yo this is my first post',\r\n            likesCount: 23,\r\n            source: 'https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/f/39c5e0dd-e819-4a7d-b314-5b9665bd8e30/d7bkh20-72708552-82b2-40ae-8b83-ee1dbe2e7846.jpg/v1/fill/w_768,h_960,q_75,strp/keanu_reeves___neo__matrix__by_zied8008_d7bkh20-fullview.jpg?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1cm46YXBwOjdlMGQxODg5ODIyNjQzNzNhNWYwZDQxNWVhMGQyNmUwIiwiaXNzIjoidXJuOmFwcDo3ZTBkMTg4OTgyMjY0MzczYTVmMGQ0MTVlYTBkMjZlMCIsIm9iaiI6W1t7ImhlaWdodCI6Ijw9OTYwIiwicGF0aCI6IlwvZlwvMzljNWUwZGQtZTgxOS00YTdkLWIzMTQtNWI5NjY1YmQ4ZTMwXC9kN2JraDIwLTcyNzA4NTUyLTgyYjItNDBhZS04YjgzLWVlMWRiZTJlNzg0Ni5qcGciLCJ3aWR0aCI6Ijw9NzY4In1dXSwiYXVkIjpbInVybjpzZXJ2aWNlOmltYWdlLm9wZXJhdGlvbnMiXX0.izytAEyMlLpdU7qWbxOHbZzEoMihKinfjLrRXD-3UBU'\r\n        },\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n}\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case (ADD_POST): {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0,\r\n                source: 'https://avatars.mds.yandex.net/get-zen_doc/1328583/pub_5c51c6e9420c4000ad739cf2_5c52fcca3c26f500aef4416b/scale_1200'\r\n            }\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData, newPost],\r\n            };\r\n        }\r\n        case (SET_USER_PROFILE): {\r\n            return {\r\n                ...state,\r\n                profile: action.profile,\r\n            };\r\n        }\r\n        case (SET_STATUS): {\r\n            return {\r\n                ...state,\r\n                status: action.status,\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const addPost = (newPostText) => {\r\n    return ({type: ADD_POST, newPostText});\r\n}\r\nexport const setUserProfile = (profile) => {\r\n    return ({type: SET_USER_PROFILE, profile});\r\n}\r\nexport const setStatus = (status) => {\r\n    return ({type: SET_STATUS, status: status});\r\n}\r\nexport const getUserProfile = (usersId) => {\r\n    return async (dispatch) => {\r\n        let response = await profileAPI.getProfile(usersId);\r\n                dispatch(setUserProfile(response.data));\r\n    }\r\n}\r\nexport const getUserStatus = (usersId) => {\r\n    return async (dispatch) => {\r\n     let response = await  profileAPI.getStatus(usersId);\r\n                dispatch(setStatus(response.data));\r\n    }\r\n}\r\nexport const updateUserStatus = (status) => {\r\n    return async (dispatch) => {\r\n        let response = await profileAPI.updateStatus(status);\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(setStatus(status));\r\n                }\r\n    }\r\n}\r\n\r\nexport default profileReducer;","const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'Yo, man'},\r\n        {id: 3, message: 'What are you doing?'},\r\n    ],\r\n    dialogs: [\r\n        {id: 1, name: 'Alex'},\r\n        {id: 2, name: 'Alice'},\r\n        {id: 3, name: 'Dima'},\r\n        {id: 4, name: 'Andrey'},\r\n        {id: 5, name: 'Sasha'},\r\n        {id: 6, name: 'Dasha'},\r\n        {id: 7, name: 'Ivan'},\r\n    ],\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case ('SEND-MESSAGE'): {\r\n            let newMessage = {\r\n                id: 1, message: action.newMessageText,\r\n            }\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessage],\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport let SendMessage =(newMessageText) => {\r\n    return {type: SEND_MESSAGE, newMessageText};\r\n}\r\nexport default dialogsReducer;","import {usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SETUSERS = 'SETUSERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nconst TOTALUSERS = 'TOTALUSERS'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nconst TOGGLE_FOLLOWING_PROGRESS = 'TOGGLE_FOLLOWING_PROGRESS'\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingNiProgress: [],\r\n}\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case (FOLLOW): {\r\n\r\n            return {\r\n\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        }\r\n        case (UNFOLLOW): {\r\n            return {\r\n\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        }\r\n        case (SET_CURRENT_PAGE): {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage,\r\n            }\r\n        }\r\n        case (SETUSERS): {\r\n            return {\r\n                ...state,\r\n                users: [...action.users]\r\n            }\r\n        }\r\n        case (TOTALUSERS): {\r\n            return {\r\n                ...state,\r\n                totalCount: action.totalUsersCount,\r\n            }\r\n        }\r\n        case (TOGGLE_IS_FETCHING): {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching,\r\n            }\r\n        }\r\n        case (TOGGLE_FOLLOWING_PROGRESS): {\r\n            return {\r\n                ...state,\r\n                followingNiProgress: action.isFetching\r\n                    ? [...state.followingNiProgress, action.userID]\r\n                    : state.followingNiProgress.filter(id => id !== action.userID)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n//ACtionCreators\r\nexport const followSuccsess = (userID) => {\r\n    return ({type: FOLLOW, userID})\r\n}\r\nexport const unfollowSuccsess = (userID) => {\r\n    return ({type: UNFOLLOW, userID})\r\n}\r\nexport const setUsers = (users) => {\r\n    return ({type: SETUSERS, users})\r\n}\r\nexport const setCurrentPage = (currentPage) => {\r\n    return ({type: SET_CURRENT_PAGE, currentPage})\r\n}\r\nexport const setTotalUsers = (totalUsersCount) => {\r\n    return ({type: TOTALUSERS, totalUsersCount})\r\n}\r\nexport const toggleIsFetching = (isFetching) => {\r\n    return ({type: TOGGLE_IS_FETCHING, isFetching})\r\n}\r\nexport const toggleFolowingProgress = (isFetching, userID) => {\r\n    return ({type: TOGGLE_FOLLOWING_PROGRESS, isFetching, userID})\r\n}\r\n\r\nexport const requestUsers = (pageSize, currentPage) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        let data = await usersAPI.getUsers(pageSize, currentPage);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsers(data.totalCount));\r\n    }\r\n}\r\nexport const ChangePage = (pageSize, pageNumber) => {\r\n    return async (dispatch) => {\r\n        dispatch(requestUsers(pageSize, pageNumber));\r\n        dispatch(setCurrentPage(pageNumber));\r\n        dispatch(toggleIsFetching(true));\r\n        let data = await usersAPI.getUsers(pageSize, pageNumber)\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n    }\r\n}\r\nexport const unfollowThunk = (userID) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleFolowingProgress(true, userID));\r\n        let response = await usersAPI.unfollow(userID)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(unfollowSuccsess(userID))\r\n        }\r\n        dispatch(toggleFolowingProgress(false, userID));\r\n    }\r\n}\r\nexport const followThunk = (userID) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleFolowingProgress(true, userID));\r\n        let response = await usersAPI.follow(userID)\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(followSuccsess(userID))\r\n                }\r\n                dispatch(toggleFolowingProgress(false, userID));\r\n    }\r\n}\r\nexport default usersReducer;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'auth/SET_USER_DATA';\r\n\r\n\r\nlet initialState = {\r\n    id: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false,\r\n}\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case (SET_USER_DATA): {\r\n            return{\r\n                ...state,\r\n                ...action.data,\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const setAuthUserData = (id, login, email, isAuth) => {\r\n    return ({type: SET_USER_DATA, data: {id, login, email, isAuth} })\r\n}\r\nexport const getAuthUserData = () => {\r\n    return async (dispatch) =>{\r\n        let response = await authAPI.authMe();\r\n                if (response.data.resultCode ===0){\r\n                   dispatch( setAuthUserData(response.data.data.id, response.data.data.login, response.data.data.email, true));\r\n                }\r\n    }\r\n}\r\nexport const login = (email, password, rememberMe) => {\r\n    return  async (dispatch) =>{\r\n       let response = await authAPI.login(email, password, rememberMe)\r\n                if (response.data.resultCode ===0){\r\n                    dispatch(getAuthUserData());\r\n                } else {\r\n                    let errorMessage = response.data.messages.length>0 ? response.data.messages[0] : 'Some error'\r\n                    dispatch(stopSubmit('login',{_error: errorMessage}));\r\n                }\r\n    }\r\n}\r\nexport const logout = () => {\r\n    return async (dispatch) =>{\r\n        let response = await authAPI.logout()\r\n                if (response.data.resultCode ===0){\r\n                    dispatch(setAuthUserData(null, null, null, false));\r\n                }\r\n    }\r\n}\r\n\r\nexport default authReducer;","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n}\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case (INITIALIZED_SUCCESS): {\r\n            return{\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const initializedSuccess = () => {\r\n    return ({type: INITIALIZED_SUCCESS})\r\n}\r\nexport const initializeApp = () => {\r\n    return  (dispatch) =>{\r\n     let promise = dispatch(getAuthUserData());\r\n        promise.then( () => {\r\n            dispatch(initializedSuccess());\r\n        });\r\n    }\r\n}\r\nexport default appReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store;","import React from 'react';\r\nimport './Navbar.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return <nav className='nav'>\r\n        <div className='nav__link'><NavLink to='/profile'>Profile</NavLink></div>\r\n        <div className='nav__link'><NavLink to='/dialogs'>Messages</NavLink></div>\r\n        <div className='nav__link'><NavLink to='/users'>Users</NavLink></div>\r\n        <div className='nav__link'><NavLink to='/news'>News</NavLink></div>\r\n        <div className='nav__link'><NavLink to='/music'>Music</NavLink></div>\r\n        <div className='nav__link'><NavLink to='/settings'>Settings</NavLink></div>\r\n    </nav>\r\n};\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport './Music.css';\r\n\r\nconst Music = () => {\r\n    return <div>\r\n        Music\r\n    </div>\r\n}\r\n\r\nexport default Music;","import React from \"react\";\r\nimport './News.css';\r\n\r\nconst News = () => {\r\n    return <div>\r\n        News\r\n    </div>\r\n}\r\n\r\nexport default News;","import React from \"react\";\r\nimport './Settings.css';\r\n\r\nconst Settings = () => {\r\n    return <div>\r\n        Settings\r\n    </div>\r\n}\r\n\r\nexport default Settings;","import React from \"react\";\r\nimport './DialogsItem.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogsItem = (props) =>{\r\n    let path = \"/dialogs/\" + props.id;\r\n    return<div className='Dialogs__item'>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogsItem;","import React from \"react\";\r\nimport './Message.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className=\"Dialog__message\">{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport './FormsControls.css';\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n    return (<div className={ (meta.touched && meta.error) ? 'formsControls error' : 'formsControls'}>\r\n        <div>\r\n            <textarea  {...input} {...props}/>\r\n        </div>\r\n        { (meta.touched && meta.error) ?<span>{meta.error}!</span>: null}\r\n    </div>)\r\n}\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n    return (<div className={ (meta.touched && meta.error) ? 'formsControls error' : 'formsControls'}>\r\n        <div>\r\n            <input  {...input} {...props}/>\r\n        </div>\r\n        { (meta.touched && meta.error) ?<span>{meta.error}!</span>: null}\r\n    </div>)\r\n}","export const requaredField = (value) => {\r\n    if (value) {\r\n        return undefined;\r\n    } else {\r\n        return 'Field required'\r\n    }\r\n}\r\nexport const maxLenghtCreator = (maxLength) =>\r\n    (value) => {\r\n    if (value && value.length>maxLength) {\r\n        return `Max length is ${maxLength} simbols`;\r\n    } else {\r\n        return undefined;\r\n    }\r\n}","import React from \"react\";\r\nimport './Dialogs.css';\r\nimport DialogsItem from \"./DialogsItem/DialogsItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLenghtCreator, requaredField} from \"../../utils/validators/validators\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let addNewMessage = (values) => {\r\n        props.SendMessage(values.newMessageBody);\r\n    }\r\n    let dialogsElements = props.dialogs.map(dialog => <DialogsItem name={dialog.name} id={dialog.id}/>);\r\n    let messagesElements = props.messages.map(message => <Message id={message.id} message={message.message}/>);\r\n    if (!props.isAuth)  return <Redirect to='/login'/>\r\n    return <div className='Dialogs'>\r\n        <div className='Dialogs__page'>\r\n            {dialogsElements}\r\n        </div>\r\n        <div className='Dialogs__messages'>\r\n            {messagesElements}\r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n        </div>\r\n    </div>\r\n}\r\nconst maxLength50= maxLenghtCreator(50);\r\nconst AddMessageForm = (props) => {\r\n    return (<form onSubmit={props.handleSubmit}>\r\n        <div>\r\n                <Field name='newMessageBody' component={Textarea} placeholder={'Enter your message'} validate={[requaredField, maxLength50]}/>\r\n    </div>\r\n    <button>Send message</button>\r\n    </form>)\r\n}\r\nconst AddMessageFormRedux = reduxForm({\r\n    form: 'dialogAddMessageForm',\r\n})(AddMessageForm)\r\nexport default Dialogs;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login'/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    let ConnectAuthRedirect = connect (mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectAuthRedirect;\r\n}","import {SendMessage} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps =(state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        newMessageText: state.dialogsPage.newMessageText,\r\n        messages: state.dialogsPage.messages,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        SendMessage:  (NewMessage) => {\r\n            dispatch(SendMessage(NewMessage));\r\n        },\r\n    }\r\n}\r\nexport default compose (\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect)(Dialogs);","import React, {useState} from \"react\";\r\nimport './Paginator.css';\r\n\r\nlet Paginator = (props) => {\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let portionSize = 15;\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    let portionsCount = Math.ceil(pagesCount / portionSize);\r\n    let leftPortionBorder = (portionNumber - 1)*portionSize + 1;\r\n    let rightPortionBorder = portionNumber * portionSize;\r\n    let leftarrs = '<';\r\n    let rightarrs = '>';\r\n    return <div className='Paginator'>\r\n        {portionNumber > 1 && <div>\r\n            <div className='Users__Pages Arrs' onClick={() => setPortionNumber(portionNumber - 1)}>{leftarrs}</div>\r\n            <div onClick={() => {\r\n                props.onPageChanged(1)\r\n            }} className={props.currentPage === 1 ? 'Users__Pages CurrentPage' : 'Users__Pages'}> 1 </div>\r\n        </div>}\r\n        {pages.filter(p => p >= leftPortionBorder && p <= rightPortionBorder).map(p =>\r\n            <div onClick={() => {\r\n                props.onPageChanged(p)\r\n            }} className={props.currentPage === p ? 'Users__Pages CurrentPage' : 'Users__Pages'}> {p} </div>\r\n        )}\r\n        {portionNumber < portionsCount && <div>\r\n            <div onClick={() => {\r\n                props.onPageChanged(pagesCount)\r\n            }} className={props.currentPage === pagesCount ? 'Users__Pages CurrentPage' : 'Users__Pages'}> {pagesCount} </div>\r\n            <div className='Users__Pages Arrs' onClick={() => setPortionNumber(portionNumber + 1)}>{rightarrs}</div>\r\n        </div>}\r\n    </div>\r\n}\r\nexport default Paginator;","import React from \"react\";\r\nimport './Users.css';\r\nimport userPhoto from '../../assets/images/User-Icon.png'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\n\r\nlet Users = (props) => {\r\n\r\n    return <div className='Users__body'>\r\n        <Paginator currentPage={props.currentPage} onPageChanged={props.onPageChanged} totalUsersCount={props.totalUsersCount} pageSize={props.pageSize}/>\r\n        {\r\n            props.users.map(u => <div key={u.id}>\r\n                <div className='User__body'>\r\n                    <div className='User__followblock'>\r\n                        <NavLink to={'/profile/' + u.id}>\r\n                            <div className='User__avatar'>\r\n                                <img src={u.photos.small != null ? u.photos.small : userPhoto} className='Avatar__img'/>\r\n                            </div>\r\n                        </NavLink>\r\n                        {u.followed ? <button disabled={props.followingNiProgress.some (id => id === u.id)} onClick={() => {\r\n                                props.unfollowThunk(u.id)\r\n                            }\r\n\r\n                            }>Unfollow</button> :\r\n                            <button disabled={props.followingNiProgress.some (id => id === u.id)} onClick={() => {\r\n                                props.followThunk(u.id)\r\n                            }\r\n\r\n                            }>Follow</button>}\r\n                    </div>\r\n                    <div className='User__info'>\r\n                        <div className='User__name'>{u.name}</div>\r\n                        <div className='User__status'>{u.id}</div>\r\n                        <div className='User__location'>{'u.location.country'}, <p>{'u.location.city'}</p></div>\r\n                    </div>\r\n                </div>\r\n            </div>)\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default Users","import React from \"react\";\r\nimport preloader from \"../../../assets/images/91.svg\";\r\n\r\nlet Preloader = () => {\r\n    return <img src={preloader}/>\r\n}\r\n\r\nexport default Preloader","export const getUsers = (state) => {\r\n    return state.usersPage.users;\r\n}\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\nexport const getTotalCount = (state) => {\r\n    return state.usersPage.totalCount;\r\n}\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingNiProgress = (state) => {\r\n    return state.usersPage.followingNiProgress;\r\n}\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Users from \"./Users\";\r\nimport {\r\n    setCurrentPage,\r\n    followSuccsess,\r\n    setUsers,\r\n    toggleIsFetching,\r\n    setTotalUsers,\r\n    unfollowSuccsess,\r\n    toggleFolowingProgress, requestUsers, ChangePage, unfollowThunk, followThunk\r\n} from \"../../redux/users-reducer\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingNiProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalCount, getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.requestUsers(this.props.pageSize, this.props.currentPage);\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setCurrentPage(1);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.ChangePage(this.props.pageSize, pageNumber);\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   currentPage={this.props.currentPage}\r\n                   pageSize={this.props.pageSize}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   followThunk={this.props.followThunk}\r\n                   unfollowThunk={this.props.unfollowThunk}\r\n                   toggleFolowingProgress={this.props.toggleFolowingProgress}\r\n                   followingNiProgress={this.props.followingNiProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n/*let mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingNiProgress: state.usersPage.followingNiProgress,\r\n    }\r\n}*/\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingNiProgress: getFollowingNiProgress(state),\r\n    }\r\n}\r\nexport default compose (\r\n    connect(mapStateToProps, {\r\n        followSuccsess,\r\n        unfollowSuccsess,\r\n        setUsers,\r\n        setCurrentPage,\r\n        setTotalUsers,\r\n        toggleIsFetching,\r\n        toggleFolowingProgress,\r\n        requestUsers,\r\n        ChangePage,\r\n        followThunk,\r\n        unfollowThunk,\r\n    }),\r\n    withAuthRedirect)(UsersContainer)","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks  = (props) =>{\r\n\r\n        let [editMode, setEditMode] =useState(false);\r\n        let [status, setStatus] =useState(props.status);\r\n\r\n        useEffect( ()=> {\r\n            setStatus(props.status);\r\n        }, [props.status])\r\n\r\n        const toggleEditMode = () => {\r\n            setEditMode(!editMode);\r\n            if (editMode) {props.updateUserStatus(status);}\r\n        }\r\n\r\n        const onStatusChange = (e) =>{\r\n            setStatus(e.currentTarget.value);\r\n        }\r\n        return (<div>\r\n\r\n            { !editMode &&\r\n                <div>\r\n                <span onDoubleClick={ props.isOwner ? toggleEditMode : null}>{!props.status ? '-----------' : props.status} </span>\r\n            </div>}\r\n            { editMode &&\r\n                <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={toggleEditMode} value={status}/>\r\n            </div>}\r\n        </div>)\r\n\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status,\r\n        defaultstatus: 'Hello anyone! =)',\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n        if (prevProps.status !== this.props.status){\r\n            this.setState({\r\n                status: this.props.status,\r\n            })\r\n        }\r\n    }\r\n\r\n    toggleEditMode = () => {\r\n        this.setState({\r\n            editMode: !this.state.editMode,\r\n        })\r\n        this.state.editMode = !this.state.editMode;\r\n        if (!this.state.editMode) {\r\n            this.props.updateUserStatus(this.state.status);\r\n        }\r\n}\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value,\r\n        })\r\n\r\n    }\r\n    render() {\r\n        return (<div>\r\n\r\n            {((!this.state.editMode)) ?<div>\r\n                <span onDoubleClick={this.toggleEditMode}>{!this.props.status ? this.state.defaultstatus : this.props.status}</span>\r\n            </div>:\r\n                <div>\r\n                <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.toggleEditMode} value={this.state.status}/>\r\n                </div>}\r\n        </div>)\r\n    }\r\n\r\n}\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport './ProfileInfo.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport findjob from '../../../assets/images/trruejob.webp'\r\nimport chill from '../../../assets/images/chill.webp'\r\nimport ProfileStatus from \"./ProfileStatus/ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatus/ProfileStatusWithHooks\";\r\nimport userPhoto from \"./../../../assets/images/User-Icon.png\"\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    return <div>\r\n        <div className='Profile__image'>\r\n            <img\r\n                src='https://avatars.mds.yandex.net/get-pdb/881477/cccaab65-30dc-4715-923e-b2594c6bb6e0/s1200?webp=false'/>\r\n        </div>\r\n        <div className='ProfileIngo__UserName'>\r\n            {props.profile.fullName}\r\n        </div>\r\n        <div className='Profile__DescriptionBlock'>\r\n            <ProfileStatusWithHooks status={props.status} updateUserStatus={props.updateUserStatus} isOwner={props.isOwner}/>\r\n            <div>\r\n                <img src={ props.profile.photos.large ? props.profile.photos.large : userPhoto }/>\r\n            </div>\r\n            <div className='ProfileInfo__Status'>\r\n                {props.profile.aboutMe}\r\n            </div>\r\n            <div>\r\n                О работе\r\n                <div><img src={props.profile.lookingForAJob ? findjob : chill}/></div>\r\n                <div className='ProfileInfo__Status'>{props.profile.lookingForAJobDescription}</div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport './Post.css';\r\n\r\nconst Post = (props) => {\r\n    return <div className='MyPosts__Post'>\r\n    <img src={props.source}/>\r\n    {props.message}\r\n<div className=\"Post__Like\">Like {props.likesCount}</div>\r\n  </div>\r\n};\r\n\r\nexport default Post;","import React from 'react';\r\nimport './MyPosts.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLenghtCreator, requaredField} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst MyPosts = (props) => {\r\n    let postsElements = props.postsData.map(post => <Post message={post.message} likesCount={post.likesCount} source={post.source}/>);\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n    return <div>\r\n        <div>My Posts</div>\r\n        <AddPostFormRedux onSubmit={onAddPost}/>\r\n        {postsElements}\r\n    </div>\r\n};\r\n\r\nconst maxLength10 = maxLenghtCreator(10);\r\n\r\nconst AddPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n    <div>\r\n        <Field component={Textarea} name='newPostText' placeholder={'add new post =)'} validate={[requaredField, maxLength10]}/>\r\n    </div>\r\n    <div>\r\n        <button >add post</button>\r\n    </div>\r\n    </form>\r\n}\r\nconst AddPostFormRedux = reduxForm({\r\n    form: 'NewPostText'\r\n})(AddPostForm)\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPost} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        newPostText : state.profilePage.newPostText,\r\n        postsData: state.profilePage.postsData,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => dispatch(addPost(newPostText)),\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n\r\n","import React from 'react';\r\nimport './Profile.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\n\r\nconst Profile = (props) => {\r\n        return <div>\r\n        <ProfileInfo profile={props.profile} status={props.status} updateUserStatus={props.updateUserStatus} isOwner={props.isOwner}/>\r\n        <MyPostsContainer/>\r\n    </div>\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport './Profile.css';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfile, getUserStatus, updateUserStatus} from \"../../redux/profile-reducer\";\r\nimport { withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let usersId = this.props.match.params.usersId;\r\n        if (!usersId) {\r\n            usersId= this.props.autorizedUserId;\r\n            if (!usersId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getUserProfile(usersId);\r\n        this.props.getUserStatus(usersId);\r\n\r\n    }\r\n    render() {\r\n        let usersId = this.props.match.params.usersId;\r\n        return <Profile {...this.props} isOwner={!usersId || usersId ==this.props.autorizedUserId}/>\r\n    }\r\n}\r\n    let mapStateToProps = (state) => ({\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        autorizedUserId: state.auth.id,\r\n    });\r\nexport default compose (\r\n    connect(mapStateToProps,{getUserProfile,getUserStatus, updateUserStatus}),\r\n    withRouter)(ProfileContainer);\r\n\r\n","import React from 'react';\r\nimport './Header.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return <header className='header'>\r\n        <img alt='' src='https://www.sarfmarket.com.tr/Data/Markalar/97.jpg'/>\r\n        <div className='LoginBlock'>\r\n            {props.isAuth ? <>\r\n                <div>\r\n                    <button onClick={props.logout}>Logout</button>  {props.login}\r\n                </div>\r\n                </>\r\n                : <NavLink to='/login'>Login</NavLink> }\r\n        </div>\r\n      </header>\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout, } from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return <Header{...this.props}/>\r\n    }\r\n};\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout,\r\n})(HeaderContainer);","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../common/FormsControls/FormsControls\";\r\nimport {requaredField} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n    <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field placeholder='login' name='login' component={Input} validate={[requaredField]}/>\r\n        </div>\r\n        <div>\r\n            <Field placeholder='password' type='password' name='password' component={Input} validate={[requaredField]}/>\r\n        </div>\r\n        <div>\r\n            <Field type='checkbox' name='rememberMe' component={Input}/>remember me\r\n        </div>\r\n        {(props.error) ?<div className='formSummaryError'>{props.error}</div>: null}\r\n        <div>\r\n            <button>Login</button>\r\n        </div>\r\n    </form>)\r\n}\r\n\r\nconst ReduxLoginForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formdata) => {\r\n        props.login(formdata.login, formdata.password, formdata.rememberMe)\r\n    }\r\n    if (props.isAuth){\r\n        return <Redirect to='/profile'/>\r\n    }\r\n\r\n    return <>\r\n        <h1>Login</h1>\r\n        <ReduxLoginForm onSubmit={onSubmit} />\r\n    </>\r\n}\r\nconst mapStateToProps = (state) =>({\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport default connect( mapStateToProps, {login})(Login);","import React from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport {Route, withRouter} from \"react-router-dom\";\r\nimport Music from \"./components/Music/Music\";\r\nimport News from \"./components/News/News\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Login from \"./components/Login/Login\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {return <Preloader/>}\r\n        return (\r\n            <div className='body'>\r\n                <div className='app-wrapper'>\r\n                    <HeaderContainer/>\r\n                    <Navbar/>\r\n                    <div className='app-wrapper-content'>\r\n                        <Route path='/profile/:usersId?' render={() => <ProfileContainer/>}/>\r\n                        <Route path='/dialogs' render={() => <DialogsContainer/>}/>\r\n                        <Route path='/users' render={() => <UsersContainer/>}/>\r\n                        <Route path='/news' component={News}/>\r\n                        <Route path='/music' component={Music}/>\r\n                        <Route path='/settings' component={Settings}/>\r\n                        <Route path='/login' render={() => <Login/>}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized,\r\n})\r\n\r\nexport default compose(withRouter, connect(mapStateToProps, {initializeApp}))(App);\r\n","import * as serviceWorker from './serviceWorker';\r\nimport store from \"./redux/redux-store\";\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\n\r\n    ReactDOM.render(\r\n        <React.StrictMode>\r\n            <HashRouter>\r\n                <Provider store={store}>\r\n                    <App/>\r\n                </Provider>\r\n            </HashRouter>\r\n        </React.StrictMode>,\r\n\r\n        document.getElementById('root')\r\n    );\r\n\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/User-Icon.cefea5a4.png\";"],"sourceRoot":""}